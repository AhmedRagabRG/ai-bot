// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Tiers {
  free
  premium
}

model User {
  id          Int       @id @default(autoincrement())
  uid         String    @unique @default(cuid())
  discordId   String?   @unique
  email       String    @unique
  password    String
  fullName    String
  phoneNumber String
  tier        Tiers     @default(free)
  chats       Chat[]
  history     History[]
  discord     Discord[]
  hashedRt    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("users")
}

model Chat {
  id        String       @unique @default(cuid())
  ownerId    String
  user      User      @relation(fields: [ownerId], references: [uid])
  history   History[]
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("chats")
}

model History {
  id        Int      @id @default(autoincrement())
  role      String   @default("user")
  text      String
  userId    String
  user      User     @relation(fields: [userId], references: [uid])
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  createdAt DateTime @default(now())
}

model Discord {
  id          Int      @id @default(autoincrement())
  discordId   String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [uid])
  username    String
  global_name String
  avatar      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
